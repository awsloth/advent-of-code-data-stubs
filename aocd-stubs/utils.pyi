from importlib.metadata import EntryPoint
from functools import cache
from urllib3 import BaseHTTPResponse
from typing import Any
from pathlib import Path
from zoneinfo import ZoneInfo
from importlib.metadata import version

import bs4

AOC_TZ = ZoneInfo("America/New_York")
_v = version("advent-of-code-data")
USER_AGENT = f"github.com/wimglenn/advent-of-code-data v{_v} by hey@wimglenn.com"

class HttpClient:
    def __init__(self) -> None:...
    def _limiter(self) -> None:...
    def get(self, url: str, token: str | None =None, redirect: bool=True) -> BaseHTTPResponse:...
    def post(self, url: str, token: str, fields: dict[str, Any]) -> BaseHTTPResponse:...

http = HttpClient()

def _ensure_intermediate_dirs(path: Path) -> None:...

def blocker(quiet: bool=False, dt: float=0.1, datefmt:str | None =None, until: tuple[int, int] | None=None) -> None:...

def get_owner(token: str) -> str:...

def _cli_guess(choice: str, choices: list[str]) -> str:...

def atomic_write_file(path: str, contents_str: str) -> None:...

def colored(txt: str, color: str) -> str:...

def get_plugins(group: str="adventofcode.user") -> EntryPoint:...

@cache
def _get_soup(html: str | bytes) -> bs4.BeautifulSoup:...
